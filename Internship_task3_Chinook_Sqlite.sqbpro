<?xml version="1.0" encoding="UTF-8"?><sqlb_project><db path="Chinook_Sqlite.sqlite" readonly="0" foreign_keys="1" case_sensitive_like="0" temp_store="0" wal_autocheckpoint="1000" synchronous="2"/><attached/><window><main_tabs open="structure browser pragmas query" current="3"/></window><tab_structure><column_width id="0" width="300"/><column_width id="1" width="0"/><column_width id="2" width="100"/><column_width id="3" width="4041"/><column_width id="4" width="0"/><expanded_item id="0" parent="1"/><expanded_item id="1" parent="1"/><expanded_item id="2" parent="1"/><expanded_item id="3" parent="1"/></tab_structure><tab_browse><table title="Album" custom_title="0" dock_id="1" table="4,5:mainAlbum"/><dock_state state="000000ff00000000fd0000000100000002000002480000020bfc0100000001fb000000160064006f0063006b00420072006f00770073006500310100000000000002480000012400ffffff000002480000000000000004000000040000000800000008fc00000000"/><default_encoding codec=""/><browse_table_settings><table schema="main" name="Album" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_" freeze_columns="0"><sort/><column_widths><column index="1" value="56"/><column index="2" value="300"/><column index="3" value="53"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table></browse_table_settings></tab_browse><tab_sql><sql name="Top 5 Selling Tracks">SELECT t.Name AS TrackName, SUM(il.Quantity) AS TotalSold
FROM InvoiceLine il
JOIN Track t ON il.TrackId = t.TrackId
GROUP BY t.Name
ORDER BY TotalSold DESC
LIMIT 5;
</sql><sql name="Revenue by Country">SELECT c.Country, SUM(i.Total) AS Revenue
FROM Invoice i
JOIN Customer c ON i.CustomerId = c.CustomerId
GROUP BY c.Country
ORDER BY Revenue DESC;
</sql><sql name="Monthly Sales Performance">SELECT strftime('%Y-%m', i.InvoiceDate) AS Month, SUM(i.Total) AS Revenue
FROM Invoice i
GROUP BY Month
ORDER BY Month;</sql><sql name="Top 3 tracks per genre">WITH track_sales AS (
  SELECT
    t.GenreId,
    t.TrackId,
    t.Name,
    SUM(il.Quantity) AS TotalSold
  FROM InvoiceLine AS il
  JOIN Track AS t
    ON il.TrackId = t.TrackId
  GROUP BY t.GenreId, t.TrackId, t.Name
),
ranked AS (
  SELECT
    GenreId,
    TrackId,
    Name,
    TotalSold,
    RANK() OVER (PARTITION BY GenreId ORDER BY TotalSold DESC) AS rnk
  FROM track_sales
)
SELECT GenreId, TrackId, Name, TotalSold, rnk
FROM ranked
WHERE rnk &lt;= 3
ORDER BY GenreId, rnk;
</sql><current_tab id="3"/></tab_sql></sqlb_project>
